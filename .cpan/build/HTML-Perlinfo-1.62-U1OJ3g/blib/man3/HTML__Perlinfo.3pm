.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "HTML::Perlinfo 3"
.TH HTML::Perlinfo 3 "2011-06-13" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
HTML::Perlinfo \- Display a lot of Perl information in HTML format
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use HTML::Perlinfo;
\&
\&        perlinfo();
\&        
\&        
\&        use HTML::Perlinfo;
\&        use CGI qw(header);
\&
\&        $|++;
\&
\&        print header;
\&        perlinfo(INFO_MODULES);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module outputs a large amount of information about your Perl installation in \s-1HTML\s0. So far, this includes information about Perl compilation options, the Perl version, server information and environment, \s-1HTTP\s0 headers, \s-1OS\s0 version information, Perl modules, and more.
.PP
HTML::Perlinfo is aimed at Web developers, but almost anyone using Perl may find it useful. It is a valuable debugging tool as it contains all \s-1EGPCS\s0 (Environment, \s-1GET\s0, \s-1POST\s0, Cookie, Server) data. It will also work under taint mode.
.PP
The output may be customized by passing one of the following options.
.SH "OPTIONS"
.IX Header "OPTIONS"
There are 8 options to pass to the perlinfo funtion. All of these options are also object methods. The key difference is their case: Captilize the option name when passing it to the function and use only lower-case letters when using the object-oriented approach.
.IP "\s-1INFO_GENERAL\s0" 4
.IX Item "INFO_GENERAL"
The Perl version, build date, and more.
.IP "\s-1INFO_VARIABLES\s0" 4
.IX Item "INFO_VARIABLES"
Shows all predefined variables from \s-1EGPCS\s0 (Environment, \s-1GET\s0, \s-1POST\s0, Cookie, Server).
.IP "\s-1INFO_CONFIG\s0" 4
.IX Item "INFO_CONFIG"
All configuration values from config_sh. \s-1INFO_ALL\s0 shows only some values.
.IP "\s-1INFO_APACHE\s0" 4
.IX Item "INFO_APACHE"
Apache \s-1HTTP\s0 server information, including mod_perl information.
.IP "\s-1INFO_MODULES\s0" 4
.IX Item "INFO_MODULES"
All installed modules, their version number and description. \s-1INFO_ALL\s0 shows only core modules.
Please also see HTML::Perlinfo::Modules.
.IP "\s-1INFO_LOADED\s0" 4
.IX Item "INFO_LOADED"
Post-execution dump of loaded modules (plus \s-1INFO_VARIABLES\s0). \s-1INFO_ALL\s0 shows only core modules. Please also see HTML::Perlinfo::Loaded.
.IP "\s-1INFO_LICENSE\s0" 4
.IX Item "INFO_LICENSE"
Perl license information.
.IP "\s-1INFO_ALL\s0" 4
.IX Item "INFO_ALL"
Shows all of the above defaults. This is the default value.
.SH "PROGRAMMING STYLE"
.IX Header "PROGRAMMING STYLE"
There are two styles of programming with Perlinfo.pm, a function-oriented style and an object-oriented style.
.PP
Function-oriented style:
.PP
.Vb 2
\&        # Show all information, defaults to INFO_ALL
\&        perlinfo();
\&
\&        # Show only module information. This shows all installed modules.
\&        perlinfo(INFO_MODULES);
.Ve
.PP
Object-oriented style:
.PP
.Vb 2
\&        $p = new HTML::Perlinfo;
\&        $p\->info_all;
\&
\&        # You can also set the CSS values in the constructor!
\&        $p = HTML::Perlinfo\->new(
\&                bg_image  => \*(Aqhttp://i104.photobucket.com/albums/m176/perlinfo/camel.gif\*(Aq,
\&                bg_repeat => \*(Aqyes\-repeat\*(Aq
\&        );
\&        $p\->info_all;
.Ve
.PP
More examples ...
.PP
.Vb 2
\&        # This is wrong (no capitals)
\&        $p\->INFO_MODULES;
\&
\&        # But this is correct
\&        perlinfo(INFO_MODULES);
\&        
\&        # Ditto
\&        $p\->info_modules;
.Ve
.SH "CUSTOMIZING THE HTML"
.IX Header "CUSTOMIZING THE HTML"
You can capture the \s-1HTML\s0 output and manipulate it or you can alter \s-1CSS\s0 elements with object attributes.
.PP
For further details and examples, please see the \s-1HTML\s0 documentation in the HTML::Perlinfo distribution.
.SH "SECURITY"
.IX Header "SECURITY"
Displaying detailed server information on the internet is not a good idea and HTML::Perlinfo reveals a lot of information about the local environment. While restricting what system users can publish online is wise, you can also hinder them from using the module by installing it outside of the usual module directories (see perldoc \-q lib). Of course, preventing users from installing the module in their own home directories is another matter entirely.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
HTML::Perlinfo does not require any non-core modules.
.SH "NOTES"
.IX Header "NOTES"
\&\s-1INFO_APACHE\s0 relies soley on environment variables.
.PP
\&\s-1INFO_VARIABLES\s0 did not work correctly until version 1.52.
.PP
\&\s-1INFO_LOADED\s0 is the only option whose output cannot be assigned to a scalar.
.PP
Some might notice that HTML::Perlinfo shares the look and feel of the \s-1PHP\s0 function phpinfo. It was originally inspired by that function and was first released in 2004 as PHP::Perlinfo, which is no longer available on \s-1CPAN\s0.
.PP
Since the module outputs \s-1HTML\s0, you may want to use it in a \s-1CGI\s0 script, but you do not have to. Of course, some information, like \s-1HTTP\s0 headers, would not be available if you use the module at the command-line. If you decide to use this module in a \s-1CGI\s0 script, \fBmake sure you print out the content-type header beforehand\fR. For example:
.PP
.Vb 1
\&        use HTML::Perlinfo;
\&
\&        print "Content\-type: text/html\en\en";
\&        perlinfo();
.Ve
.PP
I prefer to use the header function from the \s-1CGI\s0 module:
.PP
.Vb 2
\&        use HTML::Perlinfo;
\&        use CGI qw(header);
\&
\&        print header;
\&        perlinfo();
.Ve
.PP
In this example, I am flushing the buffer because I know that there will be a lot of modules:
.PP
.Vb 2
\&        use HTML::Perlinfo;
\&        use CGI qw(header);
\&
\&        $|++;
\&
\&        print header;
\&        perlinfo(INFO_MODULES);
.Ve
.PP
HTML::Perlinfo stopped printing the header automatically as of version 1.43.
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-html\-perlinfo@rt.cpan.org\*(C'\fR, or through the web interface at
<http://rt.cpan.org/NoAuth/ReportBug.html?Queue=HTML\-Perlinfo>.
I will be notified, and then you'll automatically be notified of progress on your bug as I make changes.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Config. You can also use \*(L"perl \-V\*(R" to see a configuration summary at the command-line.
.PP
CGI::Carp::Fatals, Apache::Status, App::Info, Probe::Perl, Module::CoreList, Module::Info, among others.
.PP
Also included in the Perlinfo distribution: perlinfo, HTML::Perlinfo::Loaded, HTML::Perlinfo::Modules
.SH "AUTHOR"
.IX Header "AUTHOR"
Mike Accardo <accardo@cpan.org>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
.Vb 3
\&   Copyright (c) 2004\-9, Mike Accardo. All Rights Reserved.
\& This module is free software. It may be used, redistributed
\&and/or modified under the terms of the Perl Artistic License.
.Ve
